<reactiveUi:ReactiveUserControl x:Class="MaterializeExcel.View.MainControl"
                                x:TypeArguments="viewModel:MainControlViewModel"
                                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                                xmlns:reactiveUi="http://reactiveui.net"
                                xmlns:nodes="clr-namespace:MaterializeExcel.ViewModel.Nodes;assembly=MaterializeExcel.ViewModel"
                                xmlns:viewModel="clr-namespace:MaterializeExcel.ViewModel;assembly=MaterializeExcel.ViewModel"
                                mc:Ignorable="d"
                                d:DataContext="{d:DesignInstance viewModel:MainControlViewModel, IsDesignTimeCreatable=False}"
                                FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"

                                TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                                Background="{DynamicResource MaterialDesignPaper}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="pack://application:,,,/MaterializeExcel.View;component/Themes/MaterialDesign.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterializeExcel.View;component/Themes/Colours.xaml" />

                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.Buttons.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.TreeView.xaml" />
                <!-- <ResourceDictionary Source="pack://application:,,,/MaterializeExcelView;component/Themes/TreeView.xaml" /> -->
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.button.xaml" />
                <!-- -->
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        </ResourceDictionary>
    </UserControl.Resources>

    <StackPanel>
        <Label>Stuff</Label>
        
        <!-- ItemsSource="{Binding CatalogNodeViewModels}" -->
        <!-- DataContext="{Binding Catalog }">         -->
        <TreeView x:Name="CatalogTree">

            <TreeView.Resources>

                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MahApps.Styles.TreeViewItem}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                </Style>

                <!-- <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MahApps.Styles.TreeViewItem}"> -->
                <!--     ~1~ <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MetroTreeViewItem}"> @1@ -->
                <!--     <Setter Property="IsExpanded" -->
                <!--             Value="{Binding IsExpanded,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" /> -->
                <!--     <Setter Property="IsSelected" -->
                <!--             Value="{Binding IsSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" /> -->
                <!-- </Style> -->

                <HierarchicalDataTemplate DataType="{x:Type nodes:NodeViewModel}"
                                          ItemsSource="{Binding Children}">
                    <!-- <view:CatalogNodeView /> -->
                    <reactiveUi:ViewModelViewHost ViewModel="{Binding ViewModel}" />

                </HierarchicalDataTemplate>
            </TreeView.Resources>

        </TreeView>
    </StackPanel>


</reactiveUi:ReactiveUserControl>